#include <iostream>
using namespace std;

class person{
    string name;
    int age;
    
    public: 
    // setter method
    // parameterized constructor
    person(string n, int a){
        name = n;
        age = a; 
        cout<<"I am a default cons."<<endl;
    }
    
    // getter method
    void show_info(){
        cout<<"Your nam is: "<<name<<endl<<"Your age is: "<<age<<endl;
    }
    
    ~person(){
        cout<<"I am a destructor"<<endl;
    }
    
};

int main() {
    person p1("brijesh", 28), p2("jay", 30);
    p1.show_info();
    p2.show_info();
    return 0;
}


---------------------------------------------
#include <iostream>
using namespace std;

class Deep {
public:
    int *data;

    // Constructor
    Deep(int value) {
        data = new int(value); // Allocate memory
    }

    // Copy Constructor
    Deep(const Deep &source) {
        data = new int(*source.data); // Allocate new memory and copy the value
        cout << "Copy Constructor called!" << endl;
    }

    // Destructor
    ~Deep() {
        delete data;
        cout << "Destructor called!" << endl;
    }
};

int main() {
    Deep obj1(20);            // Create object
    Deep obj2 = obj1;         // Invoke copy constructor
    cout << "obj1 data: " << *(obj1.data) << endl;
    cout << "obj2 data: " << *(obj2.data) << endl;

    *(obj2.data) = 30;        // Modify obj2's data
    cout << "After modification:" << endl;
    cout << "obj1 data: " << *(obj1.data) << endl;
    cout << "obj2 data: " << *(obj2.data) << endl;
    return 0;
}
